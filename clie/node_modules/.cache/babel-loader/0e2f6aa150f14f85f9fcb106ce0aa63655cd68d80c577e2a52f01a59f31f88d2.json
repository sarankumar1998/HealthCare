{"ast":null,"code":"var _jsxFileName = \"C:\\\\saran\\\\healthCare\\\\healthcare\\\\c\\\\clie\\\\src\\\\components\\\\PatientContainers\\\\PatientsBooking.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Card, CardContent, Chip, Container, Grid, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DoctorsAvailability() {\n  _s();\n  const [doctorAvailability, setDoctorAvailability] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/v3/getAvailability').then(response => {\n      setDoctorAvailability(response.data);\n    }).catch(error => {\n      console.error('Error fetching availability:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: doctorAvailability.map(doctor => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            height: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: doctor.doctorName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              children: doctor.doctorSpecialist\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: doctor.availability.map((availabilityItem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2\",\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: availabilityItem.dates[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 30,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: availabilityItem.startTimes.map((startTime, timeIndex) => /*#__PURE__*/_jsxDEV(Chip, {\n                    label: startTime,\n                    variant: \"outlined\",\n                    color: \"primary\",\n                    className: \"mt-1\"\n                  }, timeIndex, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 33,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 31,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)\n      }, doctor.doctorName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(DoctorsAvailability, \"slFsrQHkoNa17W69d2HJlRrnecY=\");\n_c = DoctorsAvailability;\nexport default DoctorsAvailability;\nvar _c;\n$RefreshReg$(_c, \"DoctorsAvailability\");","map":{"version":3,"names":["React","useEffect","useState","axios","Card","CardContent","Chip","Container","Grid","Typography","jsxDEV","_jsxDEV","DoctorsAvailability","_s","doctorAvailability","setDoctorAvailability","get","then","response","data","catch","error","console","maxWidth","children","container","spacing","map","doctor","item","xs","sm","md","style","height","variant","doctorName","fileName","_jsxFileName","lineNumber","columnNumber","doctorSpecialist","availability","availabilityItem","index","className","dates","startTimes","startTime","timeIndex","label","color","_c","$RefreshReg$"],"sources":["C:/saran/healthCare/healthcare/c/clie/src/components/PatientContainers/PatientsBooking.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Card, CardContent, Chip, Container, Grid, Typography } from '@mui/material';\r\n\r\nfunction DoctorsAvailability() {\r\n  const [doctorAvailability, setDoctorAvailability] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/api/v3/getAvailability')\r\n      .then(response => {\r\n        setDoctorAvailability(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching availability:', error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Grid container spacing={3}>\r\n        {doctorAvailability.map(doctor => (\r\n          <Grid key={doctor.doctorName} item xs={12} sm={6} md={4}>\r\n            <Card style={{ height: '100%' }}>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">{doctor.doctorName}</Typography>\r\n                <Typography variant=\"subtitle1\">{doctor.doctorSpecialist}</Typography>\r\n                <div>\r\n                  {doctor.availability.map((availabilityItem, index) => (\r\n                    <div key={index} className=\"mt-2\">\r\n                      <Typography variant=\"body2\">{availabilityItem.dates[0]}</Typography>\r\n                      <div>\r\n                        {availabilityItem.startTimes.map((startTime, timeIndex) => (\r\n                          <Chip\r\n                            key={timeIndex}\r\n                            label={startTime}\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                            className=\"mt-1\"\r\n                          />\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default DoctorsAvailability;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}