{"ast":null,"code":"var _jsxFileName = \"C:\\\\saran\\\\healthCare\\\\healthcare\\\\c\\\\clie\\\\src\\\\components\\\\PatientContainers\\\\PatientsBooking.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Card, CardContent, Chip, Container, Dialog, DialogContent, DialogTitle, Grid, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PatientsBooking() {\n  _s();\n  const [doctorsAvailability, setDoctorsAvailability] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedStartTimes, setSelectedStartTimes] = useState([]);\n  const [dialogOpen, setDialogOpen] = useState(false);\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/v3/getAvailability').then(response => {\n      setDoctorsAvailability(response.data);\n    }).catch(error => {\n      console.error('Error fetching doctors availability:', error);\n    });\n  }, []);\n  const handleChipClick = (date, startTimes) => {\n    setSelectedDate(date);\n    setSelectedStartTimes(startTimes);\n    setDialogOpen(true);\n  };\n  const handleCloseDialog = () => {\n    setDialogOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: doctorsAvailability.map(doctor => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            height: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: [\"Dr\", doctor.doctorName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: [\"Specialist: \", doctor.specialist]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: \"Available Dates:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), doctor.availability.map((availabilityItem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Chip, {\n                label: new Date(availabilityItem.dates[0]).toLocaleDateString('en-US', {\n                  month: 'short',\n                  day: 'numeric'\n                }),\n                onClick: () => handleChipClick(availabilityItem.dates[0], availabilityItem.startTimes),\n                variant: \"outlined\",\n                color: \"primary\",\n                className: \"mt-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, doctor.doctorName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: dialogOpen,\n      onClose: handleCloseDialog,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: [\"Selected Date: \", selectedDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: \"Available Start Times:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), selectedStartTimes.map((startTime, index) => /*#__PURE__*/_jsxDEV(Chip, {\n          label: startTime,\n          variant: \"outlined\",\n          color: \"primary\",\n          className: \"mt-2\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(PatientsBooking, \"JzuJb3OGBI8eqCW22/jrdqxtsqs=\");\n_c = PatientsBooking;\nexport default PatientsBooking;\nvar _c;\n$RefreshReg$(_c, \"PatientsBooking\");","map":{"version":3,"names":["React","useState","useEffect","axios","Card","CardContent","Chip","Container","Dialog","DialogContent","DialogTitle","Grid","Typography","jsxDEV","_jsxDEV","PatientsBooking","_s","doctorsAvailability","setDoctorsAvailability","selectedDate","setSelectedDate","selectedStartTimes","setSelectedStartTimes","dialogOpen","setDialogOpen","get","then","response","data","catch","error","console","handleChipClick","date","startTimes","handleCloseDialog","maxWidth","children","container","spacing","map","doctor","item","xs","sm","md","style","height","variant","doctorName","fileName","_jsxFileName","lineNumber","columnNumber","specialist","availability","availabilityItem","index","label","Date","dates","toLocaleDateString","month","day","onClick","color","className","open","onClose","startTime","_c","$RefreshReg$"],"sources":["C:/saran/healthCare/healthcare/c/clie/src/components/PatientContainers/PatientsBooking.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Chip,\r\n  Container,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Typography,\r\n} from '@mui/material';\r\n\r\nfunction PatientsBooking() {\r\n  const [doctorsAvailability, setDoctorsAvailability] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [selectedStartTimes, setSelectedStartTimes] = useState([]);\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/api/v3/getAvailability')\r\n      .then(response => {\r\n        setDoctorsAvailability(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching doctors availability:', error);\r\n      });\r\n  }, []);\r\n\r\n  const handleChipClick = (date, startTimes) => {\r\n    setSelectedDate(date);\r\n    setSelectedStartTimes(startTimes);\r\n    setDialogOpen(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setDialogOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Grid container spacing={3}>\r\n        {doctorsAvailability.map(doctor => (\r\n          <Grid key={doctor.doctorName} item xs={12} sm={6} md={4}>\r\n            <Card style={{ height: '100%' }}>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Dr{doctor.doctorName}</Typography>\r\n                <Typography variant=\"body1\">Specialist: {doctor.specialist}</Typography>\r\n                <Typography variant=\"body2\">Available Dates:</Typography>\r\n                {doctor.availability.map((availabilityItem, index) => (\r\n                  <div key={index} >\r\n                    <Chip\r\n                      label={new Date(availabilityItem.dates[0]).toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}\r\n                      onClick={() => handleChipClick(availabilityItem.dates[0], availabilityItem.startTimes)}\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      className=\"mt-2\"\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n\r\n      <Dialog open={dialogOpen} onClose={handleCloseDialog}>\r\n        <DialogTitle>Selected Date: {selectedDate}</DialogTitle>\r\n        <DialogContent>\r\n          <Typography variant=\"body2\">Available Start Times:</Typography>\r\n          {selectedStartTimes.map((startTime, index) => (\r\n            <Chip key={index} label={startTime} variant=\"outlined\" color=\"primary\" className=\"mt-2\" />\r\n          ))}\r\n        </DialogContent>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default PatientsBooking;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}