{"ast":null,"code":"var _jsxFileName = \"C:\\\\saran\\\\healthCare\\\\healthcare\\\\c\\\\clie\\\\src\\\\components\\\\DoctorContainers\\\\DoctorHome.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AppointmentBookingForm() {\n  _s();\n  const [doctors, setDoctors] = useState([]);\n  const [selectedDoctor, setSelectedDoctor] = useState('');\n  const [availableSlots, setAvailableSlots] = useState([]);\n  const [selectedSlot, setSelectedSlot] = useState('');\n  useEffect(() => {\n    // Fetch doctors' data from the API\n    axios.get('http://localhost:5000/api/doctors').then(response => {\n      setDoctors(response.data);\n    }).catch(error => {\n      console.error('Error fetching doctors:', error);\n    });\n  }, []);\n  const generateHourlySlots = (startTime, endTime) => {\n    const slots = [];\n    const currentTime = new Date(startTime);\n    const endTimeObj = new Date(endTime);\n    while (currentTime <= endTimeObj) {\n      slots.push(currentTime.toISOString());\n      currentTime.setHours(currentTime.getHours() + 1);\n    }\n    return slots;\n  };\n  const handleDoctorChange = event => {\n    const doctorId = event.target.value;\n    setSelectedDoctor(doctorId);\n\n    // Fetch doctor's start and end times from the API\n    axios.get(`http://localhost:5000/api/doctors/${doctorId}/schedule`).then(response => {\n      const startTime = new Date(response.data.startTime);\n      const endTime = new Date(response.data.endTime);\n      const slots = generateHourlySlots(startTime, endTime);\n      setAvailableSlots(slots);\n    }).catch(error => {\n      console.error('Error fetching doctor schedule:', error);\n    });\n  };\n  const handleSlotChange = event => {\n    setSelectedSlot(event.target.value);\n  };\n  const handleAppointmentBooking = () => {\n    // Implement appointment booking logic\n    // ... API call and booking code here\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Book an Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedDoctor,\n      onChange: handleDoctorChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a doctor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: doctor.id,\n        children: doctor.name\n      }, doctor.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedSlot,\n      onChange: handleSlotChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a time slot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), availableSlots.map(slot => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: slot,\n        children: new Date(slot).toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      }, slot, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAppointmentBooking,\n      children: \"Book Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(AppointmentBookingForm, \"Vs8ftfzATl9eMANal1eB1rlLJ4I=\");\n_c = AppointmentBookingForm;\nexport default DoctorHome;\nvar _c;\n$RefreshReg$(_c, \"AppointmentBookingForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AppointmentBookingForm","_s","doctors","setDoctors","selectedDoctor","setSelectedDoctor","availableSlots","setAvailableSlots","selectedSlot","setSelectedSlot","get","then","response","data","catch","error","console","generateHourlySlots","startTime","endTime","slots","currentTime","Date","endTimeObj","push","toISOString","setHours","getHours","handleDoctorChange","event","doctorId","target","value","handleSlotChange","handleAppointmentBooking","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","doctor","id","name","slot","toLocaleTimeString","hour","minute","onClick","_c","DoctorHome","$RefreshReg$"],"sources":["C:/saran/healthCare/healthcare/c/clie/src/components/DoctorContainers/DoctorHome.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction AppointmentBookingForm() {\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [selectedDoctor, setSelectedDoctor] = useState('');\r\n  const [availableSlots, setAvailableSlots] = useState([]);\r\n  const [selectedSlot, setSelectedSlot] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Fetch doctors' data from the API\r\n    axios.get('http://localhost:5000/api/doctors')\r\n      .then((response) => {\r\n        setDoctors(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching doctors:', error);\r\n      });\r\n  }, []);\r\n\r\n  const generateHourlySlots = (startTime, endTime) => {\r\n    const slots = [];\r\n    const currentTime = new Date(startTime);\r\n    const endTimeObj = new Date(endTime);\r\n\r\n    while (currentTime <= endTimeObj) {\r\n      slots.push(currentTime.toISOString());\r\n      currentTime.setHours(currentTime.getHours() + 1);\r\n    }\r\n\r\n    return slots;\r\n  };\r\n\r\n  const handleDoctorChange = (event) => {\r\n    const doctorId = event.target.value;\r\n    setSelectedDoctor(doctorId);\r\n\r\n    // Fetch doctor's start and end times from the API\r\n    axios.get(`http://localhost:5000/api/doctors/${doctorId}/schedule`)\r\n      .then((response) => {\r\n        const startTime = new Date(response.data.startTime);\r\n        const endTime = new Date(response.data.endTime);\r\n        const slots = generateHourlySlots(startTime, endTime);\r\n        setAvailableSlots(slots);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching doctor schedule:', error);\r\n      });\r\n  };\r\n\r\n  const handleSlotChange = (event) => {\r\n    setSelectedSlot(event.target.value);\r\n  };\r\n\r\n  const handleAppointmentBooking = () => {\r\n    // Implement appointment booking logic\r\n    // ... API call and booking code here\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Book an Appointment</h2>\r\n      <select value={selectedDoctor} onChange={handleDoctorChange}>\r\n        <option value=\"\">Select a doctor</option>\r\n        {doctors.map((doctor) => (\r\n          <option key={doctor.id} value={doctor.id}>\r\n            {doctor.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <select value={selectedSlot} onChange={handleSlotChange}>\r\n        <option value=\"\">Select a time slot</option>\r\n        {availableSlots.map((slot) => (\r\n          <option key={slot} value={slot}>\r\n            {new Date(slot).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <button onClick={handleAppointmentBooking}>Book Appointment</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DoctorHome;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,sBAAsBA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd;IACAC,KAAK,CAACa,GAAG,CAAC,mCAAmC,CAAC,CAC3CC,IAAI,CAAEC,QAAQ,IAAK;MAClBT,UAAU,CAACS,QAAQ,CAACC,IAAI,CAAC;IAC3B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,mBAAmB,GAAGA,CAACC,SAAS,EAAEC,OAAO,KAAK;IAClD,MAAMC,KAAK,GAAG,EAAE;IAChB,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAACJ,SAAS,CAAC;IACvC,MAAMK,UAAU,GAAG,IAAID,IAAI,CAACH,OAAO,CAAC;IAEpC,OAAOE,WAAW,IAAIE,UAAU,EAAE;MAChCH,KAAK,CAACI,IAAI,CAACH,WAAW,CAACI,WAAW,CAAC,CAAC,CAAC;MACrCJ,WAAW,CAACK,QAAQ,CAACL,WAAW,CAACM,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAClD;IAEA,OAAOP,KAAK;EACd,CAAC;EAED,MAAMQ,kBAAkB,GAAIC,KAAK,IAAK;IACpC,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACnC3B,iBAAiB,CAACyB,QAAQ,CAAC;;IAE3B;IACAjC,KAAK,CAACa,GAAG,CAAE,qCAAoCoB,QAAS,WAAU,CAAC,CAChEnB,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAMM,SAAS,GAAG,IAAII,IAAI,CAACV,QAAQ,CAACC,IAAI,CAACK,SAAS,CAAC;MACnD,MAAMC,OAAO,GAAG,IAAIG,IAAI,CAACV,QAAQ,CAACC,IAAI,CAACM,OAAO,CAAC;MAC/C,MAAMC,KAAK,GAAGH,mBAAmB,CAACC,SAAS,EAAEC,OAAO,CAAC;MACrDZ,iBAAiB,CAACa,KAAK,CAAC;IAC1B,CAAC,CAAC,CACDN,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD,CAAC,CAAC;EACN,CAAC;EAED,MAAMkB,gBAAgB,GAAIJ,KAAK,IAAK;IAClCpB,eAAe,CAACoB,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EAED,MAAME,wBAAwB,GAAGA,CAAA,KAAM;IACrC;IACA;EAAA,CACD;EAED,oBACEnC,OAAA;IAAAoC,QAAA,gBACEpC,OAAA;MAAAoC,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BxC,OAAA;MAAQiC,KAAK,EAAE5B,cAAe;MAACoC,QAAQ,EAAEZ,kBAAmB;MAAAO,QAAA,gBAC1DpC,OAAA;QAAQiC,KAAK,EAAC,EAAE;QAAAG,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACxCrC,OAAO,CAACuC,GAAG,CAAEC,MAAM,iBAClB3C,OAAA;QAAwBiC,KAAK,EAAEU,MAAM,CAACC,EAAG;QAAAR,QAAA,EACtCO,MAAM,CAACE;MAAI,GADDF,MAAM,CAACC,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEd,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eACTxC,OAAA;MAAQiC,KAAK,EAAExB,YAAa;MAACgC,QAAQ,EAAEP,gBAAiB;MAAAE,QAAA,gBACtDpC,OAAA;QAAQiC,KAAK,EAAC,EAAE;QAAAG,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAC3CjC,cAAc,CAACmC,GAAG,CAAEI,IAAI,iBACvB9C,OAAA;QAAmBiC,KAAK,EAAEa,IAAK;QAAAV,QAAA,EAC5B,IAAIb,IAAI,CAACuB,IAAI,CAAC,CAACC,kBAAkB,CAAC,EAAE,EAAE;UAAEC,IAAI,EAAE,SAAS;UAAEC,MAAM,EAAE;QAAU,CAAC;MAAC,GADnEH,IAAI;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAET,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eACTxC,OAAA;MAAQkD,OAAO,EAAEf,wBAAyB;MAAAC,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjE,CAAC;AAEV;AAACtC,EAAA,CA9EQD,sBAAsB;AAAAkD,EAAA,GAAtBlD,sBAAsB;AAgF/B,eAAemD,UAAU;AAAC,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}