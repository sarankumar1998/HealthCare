{"ast":null,"code":"var _jsxFileName = \"C:\\\\saran\\\\healthCare\\\\healthcare\\\\c\\\\clie\\\\src\\\\components\\\\PatientContainers\\\\PatientsBooking.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport moment from \"moment\";\nimport { Card, CardContent, Chip, Container, Dialog, DialogContent, DialogTitle, Grid, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PatientsBooking() {\n  _s();\n  const [doctorsAvailability, setDoctorsAvailability] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedStartTimes, setSelectedStartTimes] = useState([]);\n  const [dialogOpen, setDialogOpen] = useState(false);\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/v3/getAvailability').then(response => {\n      setDoctorsAvailability(response.data);\n    }).catch(error => {\n      console.error('Error fetching doctors availability:', error);\n    });\n  }, []);\n  const handleChipClick = (date, startTimes) => {\n    setSelectedDate(date);\n    setSelectedStartTimes(startTimes);\n    setDialogOpen(true);\n  };\n  const handleCloseDialog = () => {\n    setDialogOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: doctorsAvailability.map(doctor => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            height: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-between mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  children: [\"Dr.\", doctor.doctorName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: doctor.specialist\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Dialog, {\n                  open: dialogOpen,\n                  onClose: handleCloseDialog,\n                  children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n                    children: [\"Selected Date: \", selectedDate]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      children: \"Available Start Times:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 59,\n                      columnNumber: 25\n                    }, this), selectedStartTimes.map((startTime, index) => /*#__PURE__*/_jsxDEV(Chip, {\n                      label: startTime,\n                      variant: \"outlined\",\n                      color: \"primary\",\n                      className: \"mt-2\"\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 61,\n                      columnNumber: 27\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-xl-12\",\n                children: doctor.availability.map((availabilityItem, index) => /*#__PURE__*/_jsxDEV(Chip, {\n                  style: {\n                    background: moment().format('MMM D') === moment(availabilityItem.dates).format('MMM D') ? 'white' : 'yellow'\n                  },\n                  label: new Date(availabilityItem.dates[0]).toLocaleDateString('en-US', {\n                    month: 'short',\n                    day: 'numeric'\n                  }),\n                  onClick: () => handleChipClick(availabilityItem.dates[0], availabilityItem.startTimes),\n                  variant: \"outlined\",\n                  color: \"primary\",\n                  className: \"mt-2\"\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, doctor.doctorName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: dialogOpen,\n      onClose: handleCloseDialog,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: [\"Selected Date: \", selectedDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: \"Available Start Times:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), selectedStartTimes.map((startTime, index) => /*#__PURE__*/_jsxDEV(Chip, {\n          label: startTime,\n          variant: \"outlined\",\n          color: \"primary\",\n          className: \"mt-2\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(PatientsBooking, \"JzuJb3OGBI8eqCW22/jrdqxtsqs=\");\n_c = PatientsBooking;\nexport default PatientsBooking;\nvar _c;\n$RefreshReg$(_c, \"PatientsBooking\");","map":{"version":3,"names":["React","useState","useEffect","axios","moment","Card","CardContent","Chip","Container","Dialog","DialogContent","DialogTitle","Grid","Typography","jsxDEV","_jsxDEV","PatientsBooking","_s","doctorsAvailability","setDoctorsAvailability","selectedDate","setSelectedDate","selectedStartTimes","setSelectedStartTimes","dialogOpen","setDialogOpen","get","then","response","data","catch","error","console","handleChipClick","date","startTimes","handleCloseDialog","maxWidth","children","map","doctor","className","style","height","variant","doctorName","fileName","_jsxFileName","lineNumber","columnNumber","specialist","open","onClose","startTime","index","label","color","availability","availabilityItem","background","format","dates","Date","toLocaleDateString","month","day","onClick","_c","$RefreshReg$"],"sources":["C:/saran/healthCare/healthcare/c/clie/src/components/PatientContainers/PatientsBooking.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Chip,\r\n  Container,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Typography,\r\n} from '@mui/material';\r\n\r\nfunction PatientsBooking() {\r\n  const [doctorsAvailability, setDoctorsAvailability] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [selectedStartTimes, setSelectedStartTimes] = useState([]);\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/api/v3/getAvailability')\r\n      .then(response => {\r\n        setDoctorsAvailability(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching doctors availability:', error);\r\n      });\r\n  }, []);\r\n\r\n  const handleChipClick = (date, startTimes) => {\r\n    setSelectedDate(date);\r\n    setSelectedStartTimes(startTimes);\r\n    setDialogOpen(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setDialogOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n  <div>\r\n        {doctorsAvailability.map(doctor => (\r\n          <div key={doctor.doctorName} className=\"mb-4\">\r\n            <Card style={{ height: '100%' }}>\r\n              <CardContent>\r\n                <div className=\"d-flex justify-content-between mb-3\">\r\n                  <div>\r\n                    <Typography variant=\"h6\">Dr.{doctor.doctorName}</Typography>\r\n                    <Typography variant=\"body1\">{doctor.specialist}</Typography>\r\n                  </div>\r\n                  <div>\r\n                    <Dialog open={dialogOpen} onClose={handleCloseDialog}>\r\n                      <DialogTitle>Selected Date: {selectedDate}</DialogTitle>\r\n                      <DialogContent>\r\n                        <Typography variant=\"body2\">Available Start Times:</Typography>\r\n                        {selectedStartTimes.map((startTime, index) => (\r\n                          <Chip key={index} label={startTime} variant=\"outlined\" color=\"primary\" className=\"mt-2\" />\r\n                        ))}\r\n                      </DialogContent>\r\n                    </Dialog>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-xl-12\">\r\n                    {doctor.availability.map((availabilityItem, index) => (\r\n                      <Chip\r\n                      style={{\r\n                        background: moment().format('MMM D') === moment(availabilityItem.dates).format('MMM D') ? 'white' : 'yellow',\r\n                    }}\r\n                        key={index}\r\n                        label={new Date(availabilityItem.dates[0]).toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}\r\n                        onClick={() => handleChipClick(availabilityItem.dates[0], availabilityItem.startTimes)}\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        className=\"mt-2\"\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <Dialog open={dialogOpen} onClose={handleCloseDialog}>\r\n        <DialogTitle>Selected Date: {selectedDate}</DialogTitle>\r\n        <DialogContent>\r\n          <Typography variant=\"body2\">Available Start Times:</Typography>\r\n          {selectedStartTimes.map((startTime, index) => (\r\n            <Chip key={index} label={startTime} variant=\"outlined\" color=\"primary\" className=\"mt-2\" />\r\n          ))}\r\n        </DialogContent>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default PatientsBooking;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}