{"ast":null,"code":"var _jsxFileName = \"C:\\\\saran\\\\healthCare\\\\healthcare\\\\c\\\\clie\\\\src\\\\components\\\\PatientContainers\\\\Dialog\\\\ApptDialog.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Dialog, DialogContent, DialogTitle, Typography, Chip, Avatar } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ApptDialog({\n  doctorUniqId,\n  id,\n  dialogOpen,\n  handleCloseDialog,\n  selectedDate,\n  doctorsAvailability,\n  setSelectedStartTime,\n  handleBooking\n}) {\n  _s();\n  const [selectedDoctorInfo, setSelectedDoctorInfo] = useState(null);\n  const [defaultDate, setDefaultDate] = useState(null);\n  log;\n  useEffect(() => {\n    const doctorInfo = doctorsAvailability.find(doctor => doctor.doctorId === doctorUniqId);\n    setSelectedDoctorInfo(doctorInfo);\n  }, [doctorsAvailability, doctorUniqId]);\n  useEffect(() => {\n    if (selectedDoctorInfo) {\n      const currentAvailabilityItem = selectedDoctorInfo.availability.find(item => item.dates[0] === selectedDate);\n      if (currentAvailabilityItem) {\n        setDefaultDate(selectedDate);\n      }\n    }\n  }, [selectedDoctorInfo, selectedDate]);\n  const getAvailableSlotsForDate = date => {\n    if (selectedDoctorInfo) {\n      const availabilityItem = selectedDoctorInfo.availability.find(item => item.dates[0] === date);\n      return availabilityItem ? availabilityItem.startTimes : [];\n    }\n    return [];\n  };\n\n  // Function to convert 24-hour time to 12-hour AM/PM format\n  const convertTo12HourFormat = time => {\n    const [hours, minutes] = time.split(\":\");\n    const parsedHours = parseInt(hours, 10);\n    const ampm = parsedHours >= 12 ? \"PM\" : \"AM\";\n    const twelveHour = parsedHours % 12 || 12;\n    return `${twelveHour}:${minutes} ${ampm}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: dialogOpen,\n      onClose: handleCloseDialog,\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        style: {\n          margin: \"1rem\",\n          borderBottom: \"2px grey solid\",\n          display: \"flex\",\n          alignItems: \"center\"\n        },\n        children: [selectedDoctorInfo ? /*#__PURE__*/_jsxDEV(Avatar, {\n          alt: `Dr. ${selectedDoctorInfo.doctorName}`,\n          src: selectedDoctorInfo.doctorImageURL // Replace with the actual image URL\n          ,\n          style: {\n            marginRight: \"1rem\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              fontSize: '17px',\n              fontWeight: \"550\"\n            },\n            children: selectedDoctorInfo ? `Dr. ${selectedDoctorInfo.doctorName}` : \"Doctor Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              fontSize: '16px'\n            },\n            variant: \"body2\",\n            children: selectedDoctorInfo ? selectedDoctorInfo.specialist : \"Specialist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            style: {\n              color: \"grey\"\n            },\n            children: \"33 N Fullerton Ave Montclair NJ 07042\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), defaultDate && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            style: {\n              color: \"grey\"\n            },\n            children: [\"Selected Date: \", new Date(defaultDate).toLocaleDateString('en-US', {\n              month: 'short',\n              day: 'numeric'\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        style: {\n          margin: \"1rem\"\n        },\n        children: selectedDoctorInfo && selectedDoctorInfo.availability.map((availabilityItem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              fontSize: '15px'\n            },\n            variant: \"body2\",\n            children: new Date(availabilityItem.dates[0]).toLocaleDateString('en-US', {\n              month: 'short',\n              day: 'numeric'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this), getAvailableSlotsForDate(availabilityItem.dates[0]).map((startTime, slotIndex) => /*#__PURE__*/_jsxDEV(Chip, {\n            style: {\n              padding: \"0.5rem\",\n              fontSize: \"15px\",\n              borderRadius: \"2px\",\n              margin: '0.3rem',\n              background: \"yellow\"\n            },\n            label: convertTo12HourFormat(startTime) // Convert time to 12-hour format\n            ,\n            className: \"mt-2\",\n            onClick: () => {\n              setSelectedStartTime(startTime);\n              handleBooking(doctorUniqId, id, availabilityItem.dates[0]);\n            }\n          }, slotIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 33\n          }, this))]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(ApptDialog, \"UsSwlXlgKz6qiyztMelw/yzNDSA=\");\n_c = ApptDialog;\nvar _c;\n$RefreshReg$(_c, \"ApptDialog\");","map":{"version":3,"names":["React","useEffect","useState","Dialog","DialogContent","DialogTitle","Typography","Chip","Avatar","jsxDEV","_jsxDEV","ApptDialog","doctorUniqId","id","dialogOpen","handleCloseDialog","selectedDate","doctorsAvailability","setSelectedStartTime","handleBooking","_s","selectedDoctorInfo","setSelectedDoctorInfo","defaultDate","setDefaultDate","log","doctorInfo","find","doctor","doctorId","currentAvailabilityItem","availability","item","dates","getAvailableSlotsForDate","date","availabilityItem","startTimes","convertTo12HourFormat","time","hours","minutes","split","parsedHours","parseInt","ampm","twelveHour","children","open","onClose","fullWidth","style","margin","borderBottom","display","alignItems","alt","doctorName","src","doctorImageURL","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","fontWeight","variant","specialist","color","Date","toLocaleDateString","month","day","map","index","startTime","slotIndex","padding","borderRadius","background","label","className","onClick","_c","$RefreshReg$"],"sources":["C:/saran/healthCare/healthcare/c/clie/src/components/PatientContainers/Dialog/ApptDialog.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Dialog,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Typography,\r\n    Chip,\r\n    Avatar,\r\n} from '@mui/material';\r\n\r\nexport default function ApptDialog({ doctorUniqId, id, dialogOpen, handleCloseDialog, selectedDate, doctorsAvailability, setSelectedStartTime, handleBooking }) {\r\n    const [selectedDoctorInfo, setSelectedDoctorInfo] = useState(null);\r\n    const [defaultDate, setDefaultDate] = useState(null);\r\n    log\r\n\r\n    useEffect(() => {\r\n        const doctorInfo = doctorsAvailability.find(doctor => doctor.doctorId === doctorUniqId);\r\n        setSelectedDoctorInfo(doctorInfo);\r\n    }, [doctorsAvailability, doctorUniqId]);\r\n\r\n    useEffect(() => {\r\n        if (selectedDoctorInfo) {\r\n            const currentAvailabilityItem = selectedDoctorInfo.availability.find(item => item.dates[0] === selectedDate);\r\n            if (currentAvailabilityItem) {\r\n                setDefaultDate(selectedDate);\r\n            }\r\n        }\r\n    }, [selectedDoctorInfo, selectedDate]);\r\n\r\n    const getAvailableSlotsForDate = (date) => {\r\n        if (selectedDoctorInfo) {\r\n            const availabilityItem = selectedDoctorInfo.availability.find(item => item.dates[0] === date);\r\n            return availabilityItem ? availabilityItem.startTimes : [];\r\n        }\r\n        return [];\r\n    };\r\n\r\n    // Function to convert 24-hour time to 12-hour AM/PM format\r\n    const convertTo12HourFormat = (time) => {\r\n        const [hours, minutes] = time.split(\":\");\r\n        const parsedHours = parseInt(hours, 10);\r\n        const ampm = parsedHours >= 12 ? \"PM\" : \"AM\";\r\n        const twelveHour = parsedHours % 12 || 12;\r\n        return `${twelveHour}:${minutes} ${ampm}`;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={dialogOpen} onClose={handleCloseDialog} fullWidth>\r\n                <DialogTitle style={{ margin: \"1rem\", borderBottom: \"2px grey solid\", display: \"flex\", alignItems: \"center\" }}>\r\n                    {selectedDoctorInfo ? (\r\n                        <Avatar\r\n                            alt={`Dr. ${selectedDoctorInfo.doctorName}`}\r\n                            src={selectedDoctorInfo.doctorImageURL} // Replace with the actual image URL\r\n                            style={{ marginRight: \"1rem\" }}\r\n                        />\r\n                    ) : null}\r\n                    <div>\r\n                        <Typography style={{ fontSize: '17px', fontWeight: \"550\" }}>\r\n                            {selectedDoctorInfo ? `Dr. ${selectedDoctorInfo.doctorName}` : \"Doctor Name\"}\r\n                        </Typography>\r\n                        <Typography style={{ fontSize: '16px' }} variant=\"body2\">\r\n                            {selectedDoctorInfo ? selectedDoctorInfo.specialist : \"Specialist\"}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" style={{ color: \"grey\" }}>33 N Fullerton Ave Montclair NJ 07042</Typography>\r\n                        {defaultDate && (\r\n                            <Typography variant=\"body2\" style={{ color: \"grey\" }}>\r\n                                Selected Date: {new Date(defaultDate).toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}\r\n                            </Typography>\r\n                        )}\r\n                    </div>\r\n                </DialogTitle>\r\n                <DialogContent style={{ margin: \"1rem\" }}>\r\n                    {selectedDoctorInfo && selectedDoctorInfo.availability.map((availabilityItem, index) => (\r\n                        <div key={index}>\r\n                            <Typography style={{ fontSize: '15px' }} variant=\"body2\">\r\n                                {new Date(availabilityItem.dates[0]).toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}\r\n                            </Typography>\r\n                            {getAvailableSlotsForDate(availabilityItem.dates[0]).map((startTime, slotIndex) => (\r\n                                <Chip\r\n                                    style={{ padding: \"0.5rem\", fontSize: \"15px\", borderRadius: \"2px\", margin: '0.3rem', background: \"yellow\" }}\r\n                                    key={slotIndex}\r\n                                    label={convertTo12HourFormat(startTime)} // Convert time to 12-hour format\r\n                                    className=\"mt-2\"\r\n                                    onClick={() => {\r\n                                        setSelectedStartTime(startTime);\r\n                                        handleBooking(doctorUniqId, id, availabilityItem.dates[0]);\r\n                                    }}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    ))}\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}