{"ast":null,"code":"var _jsxFileName = \"C:\\\\saran\\\\healthCare\\\\healthcare\\\\c\\\\clie\\\\src\\\\components\\\\PatientContainers\\\\Dialog\\\\ApptDialog.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Dialog, DialogContent, DialogTitle, Typography, Chip } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ApptDialog({\n  recentClickedDate,\n  doctorUniqId,\n  id,\n  dialogOpen,\n  handleCloseDialog,\n  selectedDate,\n  doctorsAvailability,\n  setSelectedStartTime,\n  handleBooking\n}) {\n  _s();\n  const [selectedDoctorInfo, setSelectedDoctorInfo] = useState(null);\n  log;\n  useEffect(() => {\n    const doctorInfo = doctorsAvailability.find(doctor => doctor.doctorId === doctorUniqId);\n    setSelectedDoctorInfo(doctorInfo);\n  }, [doctorsAvailability, doctorUniqId]);\n  const getAvailableSlotsForDate = date => {\n    if (selectedDoctorInfo) {\n      const availabilityItem = selectedDoctorInfo.availability.find(item => item.dates[0] === date);\n      return availabilityItem ? availabilityItem.startTimes : [];\n    }\n    return [];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: dialogOpen,\n      onClose: handleCloseDialog,\n      minWidth: \"md\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        style: {\n          fontSize: '17px',\n          fontWeight: \"550\"\n        },\n        children: selectedDoctorInfo ? `Dr. ${selectedDoctorInfo.doctorName}` : \"Doctor Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        style: {\n          marginTop: '-1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            fontSize: '16px'\n          },\n          variant: \"body2\",\n          children: selectedDoctorInfo ? selectedDoctorInfo.specialist : \"Specialist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          style: {\n            color: \"grey\"\n          },\n          children: \"33 N Fullerton Ave Montclair NJ 07042\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          style: {\n            color: \"grey\"\n          },\n          children: \"Available Start Times:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), selectedDoctorInfo && selectedDoctorInfo.availability.map((availabilityItem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              fontSize: '15px'\n            },\n            variant: \"body2\",\n            children: new Date(availabilityItem.dates[0]).toLocaleDateString('en-US', {\n              month: 'short',\n              day: 'numeric'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this), getAvailableSlotsForDate(availabilityItem.dates[0]).map((startTime, slotIndex) => /*#__PURE__*/_jsxDEV(Chip, {\n            style: {\n              padding: \"1rem\",\n              fontSize: \"15px\",\n              borderRadius: \"2px\",\n              margin: '0.3rem',\n              background: \"yellow\"\n            },\n            label: startTime,\n            className: \"mt-2\",\n            onClick: () => {\n              setSelectedStartTime(startTime);\n              handleBooking(doctorUniqId, id, selectedDate);\n            }\n          }, slotIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }, this))]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(ApptDialog, \"qZlTZvBJ5IlMgTo8+ch4K2ILgfs=\");\n_c = ApptDialog;\nvar _c;\n$RefreshReg$(_c, \"ApptDialog\");","map":{"version":3,"names":["React","useEffect","useState","Dialog","DialogContent","DialogTitle","Typography","Chip","jsxDEV","_jsxDEV","ApptDialog","recentClickedDate","doctorUniqId","id","dialogOpen","handleCloseDialog","selectedDate","doctorsAvailability","setSelectedStartTime","handleBooking","_s","selectedDoctorInfo","setSelectedDoctorInfo","log","doctorInfo","find","doctor","doctorId","getAvailableSlotsForDate","date","availabilityItem","availability","item","dates","startTimes","children","open","onClose","minWidth","fullWidth","style","fontSize","fontWeight","doctorName","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","variant","specialist","color","map","index","Date","toLocaleDateString","month","day","startTime","slotIndex","padding","borderRadius","margin","background","label","className","onClick","_c","$RefreshReg$"],"sources":["C:/saran/healthCare/healthcare/c/clie/src/components/PatientContainers/Dialog/ApptDialog.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Dialog,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Typography,\r\n    Chip,\r\n} from '@mui/material';\r\n\r\nexport default function ApptDialog({ recentClickedDate, doctorUniqId, id, dialogOpen, handleCloseDialog, selectedDate, doctorsAvailability, setSelectedStartTime, handleBooking }) {\r\n    const [selectedDoctorInfo, setSelectedDoctorInfo] = useState(null);\r\nlog\r\n    useEffect(() => {\r\n        const doctorInfo = doctorsAvailability.find(doctor => doctor.doctorId === doctorUniqId);\r\n        setSelectedDoctorInfo(doctorInfo);\r\n    }, [doctorsAvailability, doctorUniqId]);\r\n\r\n    const getAvailableSlotsForDate = (date) => {\r\n        if (selectedDoctorInfo) {\r\n            const availabilityItem = selectedDoctorInfo.availability.find(item => item.dates[0] === date);\r\n            return availabilityItem ? availabilityItem.startTimes : [];\r\n        }\r\n        return [];\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={dialogOpen} onClose={handleCloseDialog} minWidth=\"md\" fullWidth>\r\n                <DialogTitle style={{ fontSize: '17px', fontWeight: \"550\" }}>\r\n                    {selectedDoctorInfo ? `Dr. ${selectedDoctorInfo.doctorName}` : \"Doctor Name\"}\r\n                </DialogTitle>\r\n                <DialogContent style={{ marginTop: '-1rem' }}>\r\n                    <Typography style={{ fontSize: '16px' }} variant=\"body2\">\r\n                        {selectedDoctorInfo ? selectedDoctorInfo.specialist : \"Specialist\"}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" style={{ color: \"grey\" }}>33 N Fullerton Ave Montclair NJ 07042</Typography>\r\n                    <Typography variant=\"body2\" style={{ color: \"grey\" }}>Available Start Times:</Typography>\r\n                    {selectedDoctorInfo && selectedDoctorInfo.availability.map((availabilityItem, index) => (\r\n                        <div key={index}>\r\n                            <Typography style={{ fontSize: '15px' }} variant=\"body2\">\r\n                                {new Date(availabilityItem.dates[0]).toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}\r\n                            </Typography>\r\n                            {getAvailableSlotsForDate(availabilityItem.dates[0]).map((startTime, slotIndex) => (\r\n                                <Chip\r\n                                    style={{ padding: \"1rem\", fontSize: \"15px\", borderRadius: \"2px\", margin: '0.3rem', background: \"yellow\" }}\r\n                                    key={slotIndex}\r\n                                    label={startTime}\r\n                                    className=\"mt-2\"\r\n                                    onClick={() => {\r\n                                        setSelectedStartTime(startTime);\r\n                                        handleBooking(doctorUniqId, id,selectedDate);\r\n                                    }}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    ))}\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}