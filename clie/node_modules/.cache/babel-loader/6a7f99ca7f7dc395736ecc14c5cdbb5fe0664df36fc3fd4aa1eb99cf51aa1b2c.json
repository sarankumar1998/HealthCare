{"ast":null,"code":"var _jsxFileName = \"C:\\\\saran\\\\healthCare\\\\healthcare\\\\c\\\\clie\\\\src\\\\components\\\\PatientContainers\\\\PatientsBooking.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Card, CardContent, Chip, Container, Typography } from '@mui/material';\nimport ApptDialog from './Dialog/ApptDialog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PatientsBooking() {\n  _s();\n  const [doctorsAvailability, setDoctorsAvailability] = useState([]);\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [selectedDoctorId, setSelectedDoctorId] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedStartTime, setSelectedStartTime] = useState(null);\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/v3/getAvailability').then(response => {\n      setDoctorsAvailability(response.data);\n    }).catch(error => {\n      console.error('Error fetching doctors availability:', error);\n    });\n  }, []);\n  const handleBooking = (doctorUniqId, id, date) => {\n    if (date && selectedStartTime) {\n      const timeslot = `${selectedDate} ${selectedStartTime}:00`;\n      const requestData = {\n        doctorId: doctorUniqId,\n        patientId: id,\n        timeslot: timeslot\n      };\n      console.log(requestData, \"requestData\");\n      axios.post('http://localhost:5000/api/v3/bookAppointment', requestData).then(response => {\n        console.log('Appointment booked successfully:', response.data.message);\n        // Handle UI updates after successful booking if needed.\n      }).catch(error => {\n        console.error('Error booking appointment:', error);\n      });\n    }\n  };\n  const handleChipClick = (doctorId, date, startTimes) => {\n    setSelectedDoctorId(doctorId);\n    setSelectedDate(date);\n    setSelectedStartTime(null); // Reset selected start time\n    setDialogOpen(true);\n  };\n  const handleCloseDialog = () => {\n    setDialogOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: doctorsAvailability.map(doctor => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            height: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-between mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  children: [\"Dr. \", doctor.doctorName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: doctor.specialist\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-xl-12\",\n                children: doctor.availability.map((availabilityItem, index) => /*#__PURE__*/_jsxDEV(Chip, {\n                  label: new Date(availabilityItem.date).toLocaleDateString('en-US', {\n                    month: 'short',\n                    day: 'numeric'\n                  }),\n                  onClick: () => handleChipClick(doctor.doctorId, availabilityItem.date, availabilityItem.startTimes),\n                  className: \"mt-2\"\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)\n      }, doctor.doctorId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ApptDialog, {\n      dialogOpen: dialogOpen,\n      selectedDate: selectedDate,\n      setSelectedStartTime: setSelectedStartTime,\n      selectedStartTime: selectedStartTime,\n      selectedDoctorId: selectedDoctorId,\n      handleCloseDialog: handleCloseDialog,\n      doctorsAvailability: doctorsAvailability,\n      handleBooking: handleBooking\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(PatientsBooking, \"Yxr2/2bOTtp/cvihjQlJMRExJ4Q=\");\n_c = PatientsBooking;\nexport default PatientsBooking;\nvar _c;\n$RefreshReg$(_c, \"PatientsBooking\");","map":{"version":3,"names":["React","useState","useEffect","axios","Card","CardContent","Chip","Container","Typography","ApptDialog","jsxDEV","_jsxDEV","PatientsBooking","_s","doctorsAvailability","setDoctorsAvailability","dialogOpen","setDialogOpen","selectedDoctorId","setSelectedDoctorId","selectedDate","setSelectedDate","selectedStartTime","setSelectedStartTime","get","then","response","data","catch","error","console","handleBooking","doctorUniqId","id","date","timeslot","requestData","doctorId","patientId","log","post","message","handleChipClick","startTimes","handleCloseDialog","maxWidth","children","map","doctor","className","style","height","variant","doctorName","fileName","_jsxFileName","lineNumber","columnNumber","specialist","availability","availabilityItem","index","label","Date","toLocaleDateString","month","day","onClick","_c","$RefreshReg$"],"sources":["C:/saran/healthCare/healthcare/c/clie/src/components/PatientContainers/PatientsBooking.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    Chip,\r\n    Container,\r\n    Typography,\r\n} from '@mui/material';\r\nimport ApptDialog from './Dialog/ApptDialog';\r\n\r\nfunction PatientsBooking() {\r\n    const [doctorsAvailability, setDoctorsAvailability] = useState([]);\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n    const [selectedDoctorId, setSelectedDoctorId] = useState(null);\r\n    const [selectedDate, setSelectedDate] = useState(null);\r\n    const [selectedStartTime, setSelectedStartTime] = useState(null);\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:5000/api/v3/getAvailability')\r\n            .then(response => {\r\n                setDoctorsAvailability(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching doctors availability:', error);\r\n            });\r\n    }, []);\r\n\r\n    const handleBooking = (doctorUniqId, id, date) => {\r\n        if (date && selectedStartTime) {\r\n            const timeslot = `${selectedDate} ${selectedStartTime}:00`;\r\n            const requestData = {\r\n                doctorId: doctorUniqId,\r\n                patientId: id,\r\n                timeslot: timeslot,\r\n            };\r\n\r\n            console.log(requestData, \"requestData\");\r\n\r\n            axios.post('http://localhost:5000/api/v3/bookAppointment', requestData)\r\n                .then(response => {\r\n                    console.log('Appointment booked successfully:', response.data.message);\r\n                    // Handle UI updates after successful booking if needed.\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error booking appointment:', error);\r\n                });\r\n        }\r\n    };\r\n    const handleChipClick = (doctorId, date, startTimes) => {\r\n        setSelectedDoctorId(doctorId);\r\n        setSelectedDate(date);\r\n        setSelectedStartTime(null); // Reset selected start time\r\n        setDialogOpen(true);\r\n    };\r\n\r\n    const handleCloseDialog = () => {\r\n        setDialogOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"md\">\r\n            <div>\r\n                {doctorsAvailability.map(doctor => (\r\n                    <div key={doctor.doctorId} className=\"mb-4\">\r\n                        <Card style={{ height: '100%' }}>\r\n                            <CardContent>\r\n                                <div className=\"d-flex justify-content-between mb-3\">\r\n                                    <div>\r\n                                        <Typography variant=\"h6\">Dr. {doctor.doctorName}</Typography>\r\n                                        <Typography variant=\"body1\">{doctor.specialist}</Typography>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-12\">\r\n                                        {doctor.availability.map((availabilityItem, index) => (\r\n                                            <Chip\r\n                                                key={index}\r\n                                                label={new Date(availabilityItem.date).toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}\r\n                                                onClick={() => handleChipClick(doctor.doctorId, availabilityItem.date, availabilityItem.startTimes)}\r\n                                                className=\"mt-2\"\r\n                                            />\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <ApptDialog\r\n                dialogOpen={dialogOpen}\r\n                selectedDate={selectedDate}\r\n                setSelectedStartTime={setSelectedStartTime}\r\n                selectedStartTime={selectedStartTime}\r\n                selectedDoctorId={selectedDoctorId}\r\n                handleCloseDialog={handleCloseDialog}\r\n                doctorsAvailability={doctorsAvailability}\r\n                handleBooking={handleBooking}\r\n            />\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default PatientsBooking;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}