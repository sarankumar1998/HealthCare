{"ast":null,"code":"var _jsxFileName = \"C:\\\\saran\\\\healthCare\\\\healthcare\\\\c\\\\clie\\\\src\\\\components\\\\PatientContainers\\\\PatientsBooking.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Card, CardContent, Chip, Container, Grid, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PatientsBooking() {\n  _s();\n  const [doctorsAvailability, setDoctorsAvailability] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedStartTimes, setSelectedStartTimes] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/v3/getAvailability').then(response => {\n      setDoctorsAvailability(response.data);\n    }).catch(error => {\n      console.error('Error fetching doctors availability:', error);\n    });\n  }, []);\n  const handleChipClick = (date, startTimes) => {\n    setSelectedDate(date);\n    setSelectedStartTimes(startTimes);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: doctorsAvailability.map(doctor => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            height: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: [\"Doctor: \", doctor.doctorName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: [\"Specialist: \", doctor.specialist]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: \"Available Dates:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, doctor.doctorName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), selectedDate && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [\"Selected Date: \", selectedDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: \"Available Start Times:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), selectedStartTimes.map((startTime, index) => /*#__PURE__*/_jsxDEV(Chip, {\n        label: startTime,\n        variant: \"outlined\",\n        color: \"primary\",\n        className: \"mt-2\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(PatientsBooking, \"fqMfck1JXM6wKXS0TjuB0Ogfi5E=\");\n_c = PatientsBooking;\nexport default PatientsBooking;\nvar _c;\n$RefreshReg$(_c, \"PatientsBooking\");","map":{"version":3,"names":["React","useState","useEffect","axios","Card","CardContent","Chip","Container","Grid","Typography","jsxDEV","_jsxDEV","PatientsBooking","_s","doctorsAvailability","setDoctorsAvailability","selectedDate","setSelectedDate","selectedStartTimes","setSelectedStartTimes","get","then","response","data","catch","error","console","handleChipClick","date","startTimes","maxWidth","children","container","spacing","map","doctor","item","xs","sm","md","style","height","variant","doctorName","fileName","_jsxFileName","lineNumber","columnNumber","specialist","className","startTime","index","label","color","_c","$RefreshReg$"],"sources":["C:/saran/healthCare/healthcare/c/clie/src/components/PatientContainers/PatientsBooking.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Card, CardContent, Chip, Container, Grid, Typography } from '@mui/material';\r\n\r\nfunction PatientsBooking() {\r\n  const [doctorsAvailability, setDoctorsAvailability] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [selectedStartTimes, setSelectedStartTimes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/api/v3/getAvailability')\r\n      .then(response => {\r\n        setDoctorsAvailability(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching doctors availability:', error);\r\n      });\r\n  }, []);\r\n\r\n  const handleChipClick = (date, startTimes) => {\r\n    setSelectedDate(date);\r\n    setSelectedStartTimes(startTimes);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Grid container spacing={3}>\r\n        {doctorsAvailability.map(doctor => (\r\n          <Grid key={doctor.doctorName} item xs={12} sm={6} md={4}>\r\n            <Card style={{ height: '100%' }}>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Doctor: {doctor.doctorName}</Typography>\r\n                <Typography variant=\"body1\">Specialist: {doctor.specialist}</Typography>\r\n                <Typography variant=\"body2\">Available Dates:</Typography>\r\n       \r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n\r\n      {selectedDate && (\r\n        <div className=\"mt-3\">\r\n          <Typography variant=\"h6\">Selected Date: {selectedDate}</Typography>\r\n          <Typography variant=\"body2\">Available Start Times:</Typography>\r\n          {selectedStartTimes.map((startTime, index) => (\r\n            <Chip key={index} label={startTime} variant=\"outlined\" color=\"primary\" className=\"mt-2\" />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default PatientsBooking;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}