{"ast":null,"code":"var _jsxFileName = \"C:\\\\saran\\\\healthCare\\\\healthcare\\\\c\\\\clie\\\\src\\\\components\\\\PatientContainers\\\\Dialog\\\\ApptDialog.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import {\n//     Dialog,\n//     DialogContent,\n//     DialogTitle,\n//     Typography,\n//     Chip,\n// } from '@mui/material';\n// export default function ApptDialog({ selectedStartTimes, docId,doctorUniqId, id, dialogOpen, handleCloseDialog, selectedDate, doctorsAvailability, setSelectedStartTime, handleBooking }) {\n// console.log(docId);\n//     const [getDoctors, setGetdoctors] = useState({})\n\n//     useEffect(() => {\n//         const AllDoctors = doctorsAvailability?.find((e) => e.doctorId === docId)\n//         setGetdoctors(AllDoctors);\n\n//       }, []);\n\n//       const descriptionElementRef = React.useRef(null);\n//       React.useEffect(() => {\n//         if (open) {\n//           const { current: descriptionElement } = descriptionElementRef;\n//           if (descriptionElement !== null) {\n//             descriptionElement.focus();\n//           }\n//         }\n//       }, [open]);\n\n//     return (\n//         <div>\n//             <Dialog open={dialogOpen} onClose={handleCloseDialog} minWidth=\"md\" fullWidth >\n//                 <DialogTitle style={{ fontSize: '15px', fontWeight:\"550\" }}>Dr.{getDoctors.doctorName}</DialogTitle>\n//         <p>{getDoctors.specialist}</p>\n//                 <DialogContent>\n//                     <Typography variant=\"body2\" style={{ color: \"grey\" }}>Selected Date: {selectedDate}</Typography>\n//                     <Typography variant=\"body2\" style={{ color: \"grey\" }}>Available Start Times:</Typography>\n//                     {selectedStartTimes.map((startTime, index) => (\n//                         <Chip\n//                             key={index}\n//                             label={startTime}\n//                             variant=\"outlined\"\n//                             color=\"primary\"\n//                             className=\"mt-2\"\n//                             onClick={() => {\n//                                 setSelectedStartTime(startTime);\n//                                 handleBooking(doctorUniqId, id);\n//                             }}\n//                         />\n//                     ))}\n//                 </DialogContent>\n//             </Dialog>\n//         </div>\n//     );\n// }\n\nimport * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ApptDialog() {\n  _s();\n  const [open, setOpen] = React.useState(false);\n  const [scroll, setScroll] = React.useState('paper');\n  const handleClickOpen = scrollType => () => {\n    setOpen(true);\n    setScroll(scrollType);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const descriptionElementRef = React.useRef(null);\n  React.useEffect(() => {\n    if (open) {\n      const {\n        current: descriptionElement\n      } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [open]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClickOpen('paper'),\n      children: \"scroll=paper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      scroll: scroll,\n      \"aria-labelledby\": \"scroll-dialog-title\",\n      \"aria-describedby\": \"scroll-dialog-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"scroll-dialog-title\",\n        children: \"Subscribe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: scroll === 'paper',\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"scroll-dialog-description\",\n          ref: descriptionElementRef,\n          tabIndex: -1,\n          children: [...new Array(50)].map(() => `Cras mattis consectetur purus sit amet fermentum.\nCras justo odio, dapibus ac facilisis in, egestas eget quam.\nMorbi leo risus, porta ac consectetur ac, vestibulum at eros.\nPraesent commodo cursus magna, vel scelerisque nisl consectetur et.`).join('\\n')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Subscribe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(ApptDialog, \"cKaj3ulJoogf260F/Xd9/QnRqew=\");\n_c = ApptDialog;\nvar _c;\n$RefreshReg$(_c, \"ApptDialog\");","map":{"version":3,"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","jsxDEV","_jsxDEV","ApptDialog","_s","open","setOpen","useState","scroll","setScroll","handleClickOpen","scrollType","handleClose","descriptionElementRef","useRef","useEffect","current","descriptionElement","focus","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onClose","id","dividers","ref","tabIndex","Array","map","join","_c","$RefreshReg$"],"sources":["C:/saran/healthCare/healthcare/c/clie/src/components/PatientContainers/Dialog/ApptDialog.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import {\r\n//     Dialog,\r\n//     DialogContent,\r\n//     DialogTitle,\r\n//     Typography,\r\n//     Chip,\r\n// } from '@mui/material';\r\n// export default function ApptDialog({ selectedStartTimes, docId,doctorUniqId, id, dialogOpen, handleCloseDialog, selectedDate, doctorsAvailability, setSelectedStartTime, handleBooking }) {\r\n// console.log(docId);\r\n//     const [getDoctors, setGetdoctors] = useState({})\r\n\r\n//     useEffect(() => {\r\n//         const AllDoctors = doctorsAvailability?.find((e) => e.doctorId === docId)\r\n//         setGetdoctors(AllDoctors);\r\n    \r\n//       }, []);\r\n\r\n//       const descriptionElementRef = React.useRef(null);\r\n//       React.useEffect(() => {\r\n//         if (open) {\r\n//           const { current: descriptionElement } = descriptionElementRef;\r\n//           if (descriptionElement !== null) {\r\n//             descriptionElement.focus();\r\n//           }\r\n//         }\r\n//       }, [open]);\r\n\r\n  \r\n//     return (\r\n//         <div>\r\n//             <Dialog open={dialogOpen} onClose={handleCloseDialog} minWidth=\"md\" fullWidth >\r\n//                 <DialogTitle style={{ fontSize: '15px', fontWeight:\"550\" }}>Dr.{getDoctors.doctorName}</DialogTitle>\r\n//         <p>{getDoctors.specialist}</p>\r\n//                 <DialogContent>\r\n//                     <Typography variant=\"body2\" style={{ color: \"grey\" }}>Selected Date: {selectedDate}</Typography>\r\n//                     <Typography variant=\"body2\" style={{ color: \"grey\" }}>Available Start Times:</Typography>\r\n//                     {selectedStartTimes.map((startTime, index) => (\r\n//                         <Chip\r\n//                             key={index}\r\n//                             label={startTime}\r\n//                             variant=\"outlined\"\r\n//                             color=\"primary\"\r\n//                             className=\"mt-2\"\r\n//                             onClick={() => {\r\n//                                 setSelectedStartTime(startTime);\r\n//                                 handleBooking(doctorUniqId, id);\r\n//                             }}\r\n//                         />\r\n//                     ))}\r\n//                 </DialogContent>\r\n//             </Dialog>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n\r\n\r\nimport * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nexport default function ApptDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [scroll, setScroll] = React.useState('paper');\r\n\r\n  const handleClickOpen = (scrollType) => () => {\r\n    setOpen(true);\r\n    setScroll(scrollType);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const descriptionElementRef = React.useRef(null);\r\n  React.useEffect(() => {\r\n    if (open) {\r\n      const { current: descriptionElement } = descriptionElementRef;\r\n      if (descriptionElement !== null) {\r\n        descriptionElement.focus();\r\n      }\r\n    }\r\n  }, [open]);\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClickOpen('paper')}>scroll=paper</Button>\r\n \r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        scroll={scroll}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"scroll-dialog-title\">Subscribe</DialogTitle>\r\n        <DialogContent dividers={scroll === 'paper'}>\r\n          <DialogContentText\r\n            id=\"scroll-dialog-description\"\r\n            ref={descriptionElementRef}\r\n            tabIndex={-1}\r\n          >\r\n            {[...new Array(50)]\r\n              .map(\r\n                () => `Cras mattis consectetur purus sit amet fermentum.\r\nCras justo odio, dapibus ac facilisis in, egestas eget quam.\r\nMorbi leo risus, porta ac consectetur ac, vestibulum at eros.\r\nPraesent commodo cursus magna, vel scelerisque nisl consectetur et.`,\r\n              )\r\n              .join('\\n')}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button onClick={handleClose}>Subscribe</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}