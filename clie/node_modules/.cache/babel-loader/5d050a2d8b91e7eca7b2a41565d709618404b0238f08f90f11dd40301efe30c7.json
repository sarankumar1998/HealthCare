{"ast":null,"code":"var _jsxFileName = \"C:\\\\saran\\\\healthCare\\\\healthcare\\\\c\\\\clie\\\\src\\\\components\\\\PatientContainers\\\\PatientsBooking.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Card, CardContent, Chip, Container, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PatientsBooking() {\n  _s();\n  const [doctorsAvailability, setDoctorsAvailability] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedStartTimes, setSelectedStartTimes] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/v3/getAvailability').then(response => {\n      setDoctorsAvailability(response.data);\n    }).catch(error => {\n      console.error('Error fetching doctors availability:', error);\n    });\n  }, []);\n  const handleChipClick = (date, startTimes) => {\n    setSelectedDate(date);\n    setSelectedStartTimes(startTimes);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: doctorsAvailability.map(doctor => /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        marginBottom: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"Doctor: \", doctor.doctorName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [\"Specialist: \", doctor.specialist]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: \"Available Dates:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), doctor.availability.map((availabilityItem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Chip, {\n            label: new Date(availabilityItem.dates[0]).toLocaleDateString('en-US', {\n              month: 'short',\n              day: 'numeric'\n            }),\n            onClick: () => handleChipClick(availabilityItem.dates[0], availabilityItem.startTimes),\n            variant: \"outlined\",\n            color: \"primary\",\n            className: \"mt-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this)), selectedDate && selectedDate === doctor.availability[0].dates[0] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: [\"Selected Date: \", selectedDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: \"Available Start Times:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this), selectedStartTimes.map((startTime, index) => /*#__PURE__*/_jsxDEV(Chip, {\n            label: startTime,\n            variant: \"outlined\",\n            color: \"primary\",\n            className: \"mt-2\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)\n    }, doctor.doctorName, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(PatientsBooking, \"fqMfck1JXM6wKXS0TjuB0Ogfi5E=\");\n_c = PatientsBooking;\nexport default PatientsBooking;\nvar _c;\n$RefreshReg$(_c, \"PatientsBooking\");","map":{"version":3,"names":["React","useState","useEffect","axios","Card","CardContent","Chip","Container","Typography","jsxDEV","_jsxDEV","PatientsBooking","_s","doctorsAvailability","setDoctorsAvailability","selectedDate","setSelectedDate","selectedStartTimes","setSelectedStartTimes","get","then","response","data","catch","error","console","handleChipClick","date","startTimes","maxWidth","children","map","doctor","style","marginBottom","variant","doctorName","fileName","_jsxFileName","lineNumber","columnNumber","specialist","availability","availabilityItem","index","label","Date","dates","toLocaleDateString","month","day","onClick","color","className","startTime","_c","$RefreshReg$"],"sources":["C:/saran/healthCare/healthcare/c/clie/src/components/PatientContainers/PatientsBooking.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Card, CardContent, Chip, Container, Typography } from '@mui/material';\r\n\r\nfunction PatientsBooking() {\r\n  const [doctorsAvailability, setDoctorsAvailability] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [selectedStartTimes, setSelectedStartTimes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/api/v3/getAvailability')\r\n      .then(response => {\r\n        setDoctorsAvailability(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching doctors availability:', error);\r\n      });\r\n  }, []);\r\n\r\n  const handleChipClick = (date, startTimes) => {\r\n    setSelectedDate(date);\r\n    setSelectedStartTimes(startTimes);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      {doctorsAvailability.map(doctor => (\r\n        <Card key={doctor.doctorName} style={{ marginBottom: '20px' }}>\r\n          <CardContent>\r\n            <Typography variant=\"h6\">Doctor: {doctor.doctorName}</Typography>\r\n            <Typography variant=\"body1\">Specialist: {doctor.specialist}</Typography>\r\n            <Typography variant=\"body2\">Available Dates:</Typography>\r\n            {doctor.availability.map((availabilityItem, index) => (\r\n              <div key={index}>\r\n                <Chip\r\n                  label={new Date(availabilityItem.dates[0]).toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}\r\n                  onClick={() => handleChipClick(availabilityItem.dates[0], availabilityItem.startTimes)}\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  className=\"mt-2\"\r\n                />\r\n              </div>\r\n            ))}\r\n            {selectedDate && selectedDate === doctor.availability[0].dates[0] && (\r\n              <div className=\"mt-3\">\r\n                <Typography variant=\"h6\">Selected Date: {selectedDate}</Typography>\r\n                <Typography variant=\"body2\">Available Start Times:</Typography>\r\n                {selectedStartTimes.map((startTime, index) => (\r\n                  <Chip key={index} label={startTime} variant=\"outlined\" color=\"primary\" className=\"mt-2\" />\r\n                ))}\r\n              </div>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      ))}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default PatientsBooking;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}