{"ast":null,"code":"var _jsxFileName = \"C:\\\\saran\\\\healthCare\\\\healthcare\\\\c\\\\clie\\\\src\\\\components\\\\DoctorContainers\\\\Slots.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, Chip, Container, Dialog, DialogContent, DialogTitle, Grid, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Slots({\n  availability,\n  doctorAppointments,\n  formatAppointmentTime\n}) {\n  _s();\n  const [selectedSlot, setSelectedSlot] = useState(null);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [selectedPatientTime, setSelectedPatientTime] = useState(null);\n  const handleClickChip = slot => {\n    setSelectedSlot(slot);\n    setOpenDialog(true);\n    const formattedSlot = slot; // Format slot to match booktime format\n    const matchingAppointment = doctorAppointments === null || doctorAppointments === void 0 ? void 0 : doctorAppointments.find(appointment => appointment.booktime === formattedSlot);\n    console.log('Formatted Slot:', formattedSlot);\n    console.log('Matching Appointment:', matchingAppointment);\n    console.log('Appointment Times:', doctorAppointments === null || doctorAppointments === void 0 ? void 0 : doctorAppointments.map(appointment => appointment.booktime === formattedSlot));\n    setSelectedPatientTime(matchingAppointment ? matchingAppointment.booktime : 'No appointment booked');\n  };\n  const handleCloseDialog = () => {\n    setSelectedSlot(null);\n    setSelectedPatientTime(null);\n    setOpenDialog(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: availability.map((item, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        xl: 7,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                height: '100%'\n              },\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                  align: \"left\",\n                  children: [\"Date: \", item.dates[0]]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    color: 'grey',\n                    fontSize: '13px'\n                  },\n                  align: \"left\",\n                  children: \"Upcoming Appointments\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: item.startTimes.map((startTime, timeIndex) => {\n                    // console.log(timeIndex);\n                    const formattedStartTime = startTime; // Format startTime to match booktime format\n                    const isBooked = doctorAppointments.some(appointment => appointment.booktime === formattedStartTime);\n                    return /*#__PURE__*/_jsxDEV(Chip, {\n                      label: startTime,\n                      variant: isBooked ? 'default' : 'outlined',\n                      color: isBooked ? 'primary' : 'default',\n                      className: \"mt-2\",\n                      onClick: () => handleClickChip(startTime)\n                    }, timeIndex, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 54,\n                      columnNumber: 45\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: handleCloseDialog,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Selected Slot Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: [selectedSlot ? `You clicked on the slot: ${selectedSlot}` : 'No slot selected', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), selectedPatientTime && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: selectedPatientTime === 'No appointment booked' ? selectedPatientTime : `Patient Booking Time: ${selectedPatientTime}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(Slots, \"8vv7fkByhS3bYXGOg6aeEkHZM2k=\");\n_c = Slots;\nexport default Slots;\nvar _c;\n$RefreshReg$(_c, \"Slots\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardContent","Chip","Container","Dialog","DialogContent","DialogTitle","Grid","Typography","jsxDEV","_jsxDEV","Slots","availability","doctorAppointments","formatAppointmentTime","_s","selectedSlot","setSelectedSlot","openDialog","setOpenDialog","selectedPatientTime","setSelectedPatientTime","handleClickChip","slot","formattedSlot","matchingAppointment","find","appointment","booktime","console","log","map","handleCloseDialog","maxWidth","children","container","spacing","item","index","xs","sm","md","xl","className","style","height","align","dates","fileName","_jsxFileName","lineNumber","columnNumber","color","fontSize","startTimes","startTime","timeIndex","formattedStartTime","isBooked","some","label","variant","onClick","open","onClose","_c","$RefreshReg$"],"sources":["C:/saran/healthCare/healthcare/c/clie/src/components/DoctorContainers/Slots.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, Chip, Container, Dialog, DialogContent, DialogTitle, Grid, Typography } from '@mui/material';\r\n\r\nfunction Slots({ availability, doctorAppointments, formatAppointmentTime }) {\r\n    const [selectedSlot, setSelectedSlot] = useState(null);\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    const [selectedPatientTime, setSelectedPatientTime] = useState(null);\r\n\r\n\r\n    const handleClickChip = (slot) => {\r\n        setSelectedSlot(slot);\r\n        setOpenDialog(true);\r\n\r\n        const formattedSlot = (slot); // Format slot to match booktime format\r\n        const matchingAppointment = doctorAppointments?.find(appointment =>\r\n            appointment.booktime === formattedSlot\r\n\r\n        );\r\n        console.log('Formatted Slot:', formattedSlot);\r\n        console.log('Matching Appointment:', matchingAppointment);\r\n        console.log('Appointment Times:', doctorAppointments?.map(appointment => appointment.booktime === formattedSlot));\r\n\r\n        setSelectedPatientTime(matchingAppointment ? (matchingAppointment.booktime) : 'No appointment booked');\r\n    };\r\n\r\n    const handleCloseDialog = () => {\r\n        setSelectedSlot(null);\r\n        setSelectedPatientTime(null);\r\n        setOpenDialog(false);\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"md\">\r\n            <Grid container spacing={3}>\r\n                {availability.map((item, index) => (\r\n                    <Grid key={index} item xs={12} sm={6} md={4} xl={7}>\r\n                        <div className='row'>\r\n                             <div className=\"\">\r\n                        <Card style={{ height: '100%' }}>\r\n                            <CardContent>\r\n                                <h6 align=\"left\">Date: {item.dates[0]}</h6>\r\n                                <p style={{ color: 'grey', fontSize: '13px' }} align=\"left\">\r\n                                    Upcoming Appointments\r\n                                </p>\r\n                                <div>\r\n                                    {item.startTimes.map((startTime, timeIndex) => {\r\n                                        // console.log(timeIndex);\r\n                                        const formattedStartTime = (startTime); // Format startTime to match booktime format\r\n                                        const isBooked = doctorAppointments.some(appointment =>\r\n                                            appointment.booktime === formattedStartTime\r\n                                        );\r\n\r\n                                        return (\r\n                                            <Chip\r\n                                                key={timeIndex}\r\n                                                label={startTime}\r\n                                                variant={isBooked ? 'default' : 'outlined'}\r\n                                                color={isBooked ? 'primary' : 'default'}\r\n                                                className=\"mt-2\"\r\n                                                onClick={() => handleClickChip(startTime)}\r\n                                            />\r\n                                        );\r\n                                    })}\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                        </div>\r\n                        </div>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n            <Dialog open={openDialog} onClose={handleCloseDialog}>\r\n                <DialogTitle>Selected Slot Information</DialogTitle>\r\n                <DialogContent>\r\n                    <Typography>\r\n                        {selectedSlot ? `You clicked on the slot: ${selectedSlot}` : 'No slot selected'}\r\n                        <br />\r\n                        {selectedPatientTime && (\r\n                            <div>\r\n                                {selectedPatientTime === 'No appointment booked'\r\n                                    ? selectedPatientTime\r\n                                    : `Patient Booking Time: ${selectedPatientTime}`}\r\n                            </div>\r\n                        )}\r\n                    </Typography>\r\n\r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Slots;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}