{"ast":null,"code":"var _jsxFileName = \"C:\\\\saran\\\\healthCare\\\\healthcare\\\\c\\\\clie\\\\src\\\\components\\\\PatientContainers\\\\Dialog\\\\ApptDialog.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ApptDialog({\n  selectedStartTimes,\n  doctorUniqId,\n  id,\n  dialogOpen,\n  handleCloseDialog,\n  selectedDate,\n  doctorsAvailability,\n  setSelectedStartTime,\n  handleBooking\n}) {\n  _s();\n  const [selectedDoctorInfo, setSelectedDoctorInfo] = useState(null);\n  useEffect(() => {\n    const doctorInfo = doctorsAvailability.find(doctor => doctor.doctorId === doctorUniqId);\n    setSelectedDoctorInfo(doctorInfo);\n  }, [doctorsAvailability, doctorUniqId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: dialogOpen,\n      onClose: handleCloseDialog,\n      minWidth: \"md\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        style: {\n          fontSize: '17px',\n          fontWeight: \"550\"\n        },\n        children: selectedDoctorInfo ? `Dr. ${selectedDoctorInfo.doctorName}` : \"Doctor Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        style: {\n          marginTop: '-1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: selectedDoctorInfo ? selectedDoctorInfo.specialist : \"Specialist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          style: {\n            color: \"grey\"\n          },\n          children: [\"Selected Date: \", selectedDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          style: {\n            color: \"grey\"\n          },\n          children: \"Available Start Times:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), selectedStartTimes.map((startTime, index) => /*#__PURE__*/_jsxDEV(Chip, {\n          label: startTime,\n          variant: \"outlined\",\n          color: \"primary\",\n          className: \"mt-2\",\n          onClick: () => {\n            setSelectedStartTime(startTime);\n            handleBooking(doctorUniqId, id);\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n_s(ApptDialog, \"qZlTZvBJ5IlMgTo8+ch4K2ILgfs=\");\n_c = ApptDialog;\nvar _c;\n$RefreshReg$(_c, \"ApptDialog\");","map":{"version":3,"names":["ApptDialog","selectedStartTimes","doctorUniqId","id","dialogOpen","handleCloseDialog","selectedDate","doctorsAvailability","setSelectedStartTime","handleBooking","_s","selectedDoctorInfo","setSelectedDoctorInfo","useState","useEffect","doctorInfo","find","doctor","doctorId","_jsxDEV","children","Dialog","open","onClose","minWidth","fullWidth","DialogTitle","style","fontSize","fontWeight","doctorName","fileName","_jsxFileName","lineNumber","columnNumber","DialogContent","marginTop","Typography","variant","specialist","color","map","startTime","index","Chip","label","className","onClick","_c","$RefreshReg$"],"sources":["C:/saran/healthCare/healthcare/c/clie/src/components/PatientContainers/Dialog/ApptDialog.js"],"sourcesContent":["export default function ApptDialog({ selectedStartTimes, doctorUniqId, id, dialogOpen, handleCloseDialog, selectedDate, doctorsAvailability, setSelectedStartTime, handleBooking }) {\r\n\r\n    const [selectedDoctorInfo, setSelectedDoctorInfo] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const doctorInfo = doctorsAvailability.find(doctor => doctor.doctorId === doctorUniqId);\r\n        setSelectedDoctorInfo(doctorInfo);\r\n    }, [doctorsAvailability, doctorUniqId]);\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={dialogOpen} onClose={handleCloseDialog} minWidth=\"md\" fullWidth>\r\n                <DialogTitle style={{ fontSize: '17px', fontWeight: \"550\" }}>\r\n                    {selectedDoctorInfo ? `Dr. ${selectedDoctorInfo.doctorName}` : \"Doctor Name\"}\r\n                </DialogTitle>\r\n                <DialogContent style={{ marginTop: '-1rem' }}>\r\n                    <Typography variant=\"body2\">\r\n                        {selectedDoctorInfo ? selectedDoctorInfo.specialist : \"Specialist\"}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" style={{ color: \"grey\" }}>Selected Date: {selectedDate}</Typography>\r\n                    <Typography variant=\"body2\" style={{ color: \"grey\" }}>Available Start Times:</Typography>\r\n                    {selectedStartTimes.map((startTime, index) => (\r\n                        <Chip\r\n                            key={index}\r\n                            label={startTime}\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                            className=\"mt-2\"\r\n                            onClick={() => {\r\n                                setSelectedStartTime(startTime);\r\n                                handleBooking(doctorUniqId, id);\r\n                            }}\r\n                        />\r\n                    ))}\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}