{"ast":null,"code":"var _jsxFileName = \"C:\\\\saran\\\\healthCare\\\\healthcare\\\\c\\\\clie\\\\src\\\\components\\\\PatientContainers\\\\PatientsBooking.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Card, CardContent, Chip, Container, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PatientsBooking() {\n  _s();\n  const [doctorsAvailability, setDoctorsAvailability] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/v3/getAvailability').then(response => {\n      setDoctorsAvailability(response.data);\n    }).catch(error => {\n      console.error('Error fetching doctors availability:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: doctorsAvailability.map(doctor => /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        marginBottom: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"Doctor: \", doctor.doctorName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [\"Specialist: \", doctor.specialist]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: \"Available Dates and Start Times:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), doctor.availability.map((availabilityItem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: new Date(availabilityItem.dates[0]).toLocaleDateString('en-US', {\n              month: 'short',\n              day: 'numeric'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this), availabilityItem.startTimes.map((startTime, timeIndex) => /*#__PURE__*/_jsxDEV(Chip, {\n            label: startTime,\n            variant: \"outlined\",\n            color: \"primary\",\n            className: \"mt-2\"\n          }, timeIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 19\n          }, this))]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)\n    }, doctor.doctorName, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(PatientsBooking, \"BEj7Nn1FTF162lstz9rm+qvQK1U=\");\n_c = PatientsBooking;\nexport default PatientsBooking;\nvar _c;\n$RefreshReg$(_c, \"PatientsBooking\");","map":{"version":3,"names":["React","useState","useEffect","axios","Card","CardContent","Chip","Container","Typography","jsxDEV","_jsxDEV","PatientsBooking","_s","doctorsAvailability","setDoctorsAvailability","get","then","response","data","catch","error","console","maxWidth","children","map","doctor","style","marginBottom","variant","doctorName","fileName","_jsxFileName","lineNumber","columnNumber","specialist","availability","availabilityItem","index","Date","dates","toLocaleDateString","month","day","startTimes","startTime","timeIndex","label","color","className","_c","$RefreshReg$"],"sources":["C:/saran/healthCare/healthcare/c/clie/src/components/PatientContainers/PatientsBooking.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Card, CardContent, Chip, Container, Typography } from '@mui/material';\r\n\r\nfunction PatientsBooking() {\r\n  const [doctorsAvailability, setDoctorsAvailability] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/api/v3/getAvailability')\r\n      .then(response => {\r\n        setDoctorsAvailability(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching doctors availability:', error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      {doctorsAvailability.map(doctor => (\r\n        <Card key={doctor.doctorName} style={{ marginBottom: '20px' }}>\r\n          <CardContent>\r\n            <Typography variant=\"h6\">Doctor: {doctor.doctorName}</Typography>\r\n            <Typography variant=\"body1\">Specialist: {doctor.specialist}</Typography>\r\n            <Typography variant=\"body2\">Available Dates and Start Times:</Typography>\r\n            {doctor.availability.map((availabilityItem, index) => (\r\n              <div key={index}>\r\n                <Typography variant=\"body2\">\r\n                  {new Date(availabilityItem.dates[0]).toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}\r\n                </Typography>\r\n                {availabilityItem.startTimes.map((startTime, timeIndex) => (\r\n                  <Chip key={timeIndex} label={startTime} variant=\"outlined\" color=\"primary\" className=\"mt-2\" />\r\n                ))}\r\n              </div>\r\n            ))}\r\n          </CardContent>\r\n        </Card>\r\n      ))}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default PatientsBooking;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}