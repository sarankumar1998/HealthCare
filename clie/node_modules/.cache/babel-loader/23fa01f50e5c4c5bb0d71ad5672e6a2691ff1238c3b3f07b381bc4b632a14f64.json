{"ast":null,"code":"var _jsxFileName = \"C:\\\\saran\\\\healthCare\\\\sub\\\\clie\\\\src\\\\components\\\\DoctorContainers\\\\DoctorHome.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Button, Container, TextField, Typography, Grid } from '@mui/material';\nimport Slots from './Slots';\nimport { injectStyle } from \"react-toastify/dist/inject-style\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nif (typeof window !== \"undefined\") {\n  injectStyle();\n}\nfunction DoctorHome() {\n  _s();\n  const [date, setDate] = useState('');\n  const [startTime, setStartTime] = useState('');\n  const [endTime, setEndTime] = useState('');\n  const [message, setMessage] = useState('');\n  const [availability, setAvailability] = useState([]);\n  const {\n    id\n  } = JSON.parse(sessionStorage.getItem(\"user\"));\n  const [doctorAppointments, setDoctorAppointments] = useState([]);\n  useEffect(() => {\n    // Make the GET request using axios\n    axios.get(`http://192.168.10.117:5000/api/v3/getDoctorAppointments?doctorId=${id}`).then(response => {\n      setDoctorAppointments(response.data.doctorAppointments);\n    }).catch(error => {\n      console.error('Error fetching doctor appointments:', error);\n    });\n  }, [id]);\n  const formatAppointmentTime = dateTimeString => {\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: true\n    };\n    return new Date(dateTimeString).toLocaleString('en-US', options);\n  };\n  const handleSetAvailability = () => {\n    const payload = {\n      doctorId: id,\n      date: date,\n      startTime: startTime,\n      endTime: endTime\n    };\n    axios.post('http://192.168.10.117:5000/api/v3/setAvailability', payload).then(response => {\n      toast.success(response.data.message);\n      fetchAvailability();\n    }).catch(error => {\n      console.error('Error setting availability:', error);\n      toast.warning(error.response.data.message);\n    });\n  };\n  const fetchAvailability = () => {\n    axios.get(`http://192.168.10.117:5000/api/v3/getAvailability/${id}`).then(response => {\n      setAvailability(response.data);\n    }).catch(error => {\n      console.error('Error fetching availability:', error);\n    });\n  };\n  useEffect(() => {\n    fetchAvailability();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Set Doctor Availability\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 4,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Date\",\n            type: \"date\",\n            variant: \"outlined\",\n            fullWidth: true,\n            value: date,\n            onChange: e => setDate(e.target.value),\n            margin: \"normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 4,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Start Time\",\n            type: \"time\",\n            variant: \"outlined\",\n            fullWidth: true,\n            value: startTime,\n            onChange: e => setStartTime(e.target.value),\n            margin: \"normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 4,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"End Time\",\n            type: \"time\",\n            variant: \"outlined\",\n            fullWidth: true,\n            value: endTime,\n            onChange: e => setEndTime(e.target.value),\n            margin: \"normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: \"mt-3\",\n        onClick: handleSetAvailability,\n        children: \"Set Availability\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-5\",\n      children: /*#__PURE__*/_jsxDEV(Slots, {\n        availability: availability,\n        formatAppointmentTime: formatAppointmentTime,\n        doctorAppointments: doctorAppointments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 24\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true);\n}\n_s(DoctorHome, \"f/Z8M3vnpB0Sm0mFkN7BBC9JZIw=\");\n_c = DoctorHome;\nexport default DoctorHome;\nvar _c;\n$RefreshReg$(_c, \"DoctorHome\");","map":{"version":3,"names":["React","useEffect","useState","axios","Button","Container","TextField","Typography","Grid","Slots","injectStyle","ToastContainer","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","window","DoctorHome","_s","date","setDate","startTime","setStartTime","endTime","setEndTime","message","setMessage","availability","setAvailability","id","JSON","parse","sessionStorage","getItem","doctorAppointments","setDoctorAppointments","get","then","response","data","catch","error","console","formatAppointmentTime","dateTimeString","options","year","month","day","hour","minute","hour12","Date","toLocaleString","handleSetAvailability","payload","doctorId","post","success","fetchAvailability","warning","children","maxWidth","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","sm","label","type","fullWidth","value","onChange","e","target","margin","color","className","onClick","_c","$RefreshReg$"],"sources":["C:/saran/healthCare/sub/clie/src/components/DoctorContainers/DoctorHome.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Button, Container, TextField, Typography, Grid } from '@mui/material';\r\nimport Slots from './Slots';\r\nimport { injectStyle } from \"react-toastify/dist/inject-style\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nif (typeof window !== \"undefined\") {\r\n    injectStyle();\r\n  }\r\n\r\n\r\nfunction DoctorHome() {\r\n\r\n  const [date, setDate] = useState('');\r\n  const [startTime, setStartTime] = useState('');\r\n  const [endTime, setEndTime] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [availability, setAvailability] = useState([]);\r\n  const { id } = JSON.parse(sessionStorage.getItem(\"user\"));\r\n\r\n\r\n  \r\n  const [doctorAppointments, setDoctorAppointments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Make the GET request using axios\r\n    axios.get(`http://192.168.10.117:5000/api/v3/getDoctorAppointments?doctorId=${id}`)\r\n      .then(response => {\r\n        setDoctorAppointments(response.data.doctorAppointments);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching doctor appointments:', error);\r\n      });\r\n  }, [id]);\r\n\r\n  const formatAppointmentTime = (dateTimeString) => {\r\n    const options = {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric',\r\n      hour: 'numeric',\r\n      minute: 'numeric',\r\n      hour12: true,\r\n    };\r\n    return new Date(dateTimeString).toLocaleString('en-US', options);\r\n  };\r\n\r\n  const handleSetAvailability = () => {\r\n    const payload = {\r\n      doctorId: id,\r\n      date: date,\r\n      startTime: startTime,\r\n      endTime: endTime\r\n    };\r\n\r\n    axios.post('http://192.168.10.117:5000/api/v3/setAvailability', payload)\r\n      .then(response => {\r\n        toast.success(response.data.message);\r\n        fetchAvailability()\r\n        \r\n      })\r\n      .catch(error => {\r\n        console.error('Error setting availability:', error);\r\n        toast.warning(error.response.data.message);\r\n      });\r\n  };\r\n  const fetchAvailability = () => {\r\n    axios.get(`http://192.168.10.117:5000/api/v3/getAvailability/${id}`)\r\n      .then(response => {\r\n        setAvailability(response.data)\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching availability:', error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAvailability();\r\n}, [id]);\r\n\r\n  return (\r\n    <>\r\n    <Container maxWidth=\"sm\">\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Set Doctor Availability\r\n      </Typography>\r\n      <ToastContainer />\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={4}>\r\n          <TextField\r\n            label=\"Date\"\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={date}\r\n            onChange={(e) => setDate(e.target.value)}\r\n            margin=\"normal\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n          <TextField\r\n            label=\"Start Time\"\r\n            type=\"time\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={startTime}\r\n            onChange={(e) => setStartTime(e.target.value)}\r\n            margin=\"normal\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n          <TextField\r\n            label=\"End Time\"\r\n            type=\"time\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={endTime}\r\n            onChange={(e) => setEndTime(e.target.value)}\r\n            margin=\"normal\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      \r\n      <Button variant=\"contained\" color=\"primary\" className='mt-3' onClick={handleSetAvailability}>\r\n        Set Availability\r\n      </Button>\r\n    \r\n\r\n    </Container>\r\n <div className='mt-5'><Slots availability={availability} formatAppointmentTime={formatAppointmentTime} doctorAppointments={doctorAppointments}/></div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DoctorHome;\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}