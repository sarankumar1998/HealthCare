{"ast":null,"code":"var _jsxFileName = \"C:\\\\saran\\\\healthCare\\\\healthcare\\\\c\\\\clie\\\\src\\\\components\\\\PatientContainers\\\\Dialog\\\\ApptDialog.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Dialog, DialogContent, DialogTitle, Typography, Chip } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ApptDialog({\n  selectedStartTimes,\n  docId,\n  doctorUniqId,\n  id,\n  dialogOpen,\n  handleCloseDialog,\n  selectedDate,\n  doctorsAvailability,\n  setSelectedStartTime,\n  handleBooking\n}) {\n  _s();\n  console.log(docId);\n  const [getDoctors, setGetdoctors] = useState({});\n  useEffect(() => {\n    const AllDoctors = doctorsAvailability === null || doctorsAvailability === void 0 ? void 0 : doctorsAvailability.find(e => e.doctorId === docId);\n    setGetdoctors(AllDoctors);\n  }, []);\n  const descriptionElementRef = React.useRef(null);\n  React.useEffect(() => {\n    if (open) {\n      const {\n        current: descriptionElement\n      } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [open]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      scroll: scroll,\n      \"aria-labelledby\": \"scroll-dialog-title\",\n      \"aria-describedby\": \"scroll-dialog-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"scroll-dialog-title\",\n        children: \"Subscribe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: scroll === 'paper',\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"scroll-dialog-description\",\n          ref: descriptionElementRef,\n          tabIndex: -1,\n          children: [...new Array(50)].map(() => `Cras mattis consectetur purus sit amet fermentum.\nCras justo odio, dapibus ac facilisis in, egestas eget quam.\nMorbi leo risus, porta ac consectetur ac, vestibulum at eros.\nPraesent commodo cursus magna, vel scelerisque nisl consectetur et.`).join('\\n')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: dialogOpen,\n      onClose: handleCloseDialog,\n      minWidth: \"md\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        style: {\n          fontSize: '15px',\n          fontWeight: \"550\"\n        },\n        children: [\"Dr.\", getDoctors.doctorName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: getDoctors.specialist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          style: {\n            color: \"grey\"\n          },\n          children: [\"Selected Date: \", selectedDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          style: {\n            color: \"grey\"\n          },\n          children: \"Available Start Times:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), selectedStartTimes.map((startTime, index) => /*#__PURE__*/_jsxDEV(Chip, {\n          label: startTime,\n          variant: \"outlined\",\n          color: \"primary\",\n          className: \"mt-2\",\n          onClick: () => {\n            setSelectedStartTime(startTime);\n            handleBooking(doctorUniqId, id);\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n// import * as React from 'react';\n// import Button from '@mui/material/Button';\n// import Dialog from '@mui/material/Dialog';\n// import DialogActions from '@mui/material/DialogActions';\n// import DialogContent from '@mui/material/DialogContent';\n// import DialogContentText from '@mui/material/DialogContentText';\n// import DialogTitle from '@mui/material/DialogTitle';\n\n// export default function ScrollDialog() {\n//   const [open, setOpen] = React.useState(false);\n//   const [scroll, setScroll] = React.useState('paper');\n\n//   const handleClickOpen = (scrollType) => () => {\n//     setOpen(true);\n//     setScroll(scrollType);\n//   };\n\n//   const handleClose = () => {\n//     setOpen(false);\n//   };\n\n//   const descriptionElementRef = React.useRef(null);\n//   React.useEffect(() => {\n//     if (open) {\n//       const { current: descriptionElement } = descriptionElementRef;\n//       if (descriptionElement !== null) {\n//         descriptionElement.focus();\n//       }\n//     }\n//   }, [open]);\n\n//   return (\n//     <div>\n//       <Button onClick={handleClickOpen('paper')}>scroll=paper</Button>\n\n//     </div>\n//   );\n// }\n_s(ApptDialog, \"XQRP9Tsl+scN+9Xucbh6HrAIwmc=\");\n_c = ApptDialog;\nvar _c;\n$RefreshReg$(_c, \"ApptDialog\");","map":{"version":3,"names":["React","useEffect","useState","Dialog","DialogContent","DialogTitle","Typography","Chip","jsxDEV","_jsxDEV","ApptDialog","selectedStartTimes","docId","doctorUniqId","id","dialogOpen","handleCloseDialog","selectedDate","doctorsAvailability","setSelectedStartTime","handleBooking","_s","console","log","getDoctors","setGetdoctors","AllDoctors","find","e","doctorId","descriptionElementRef","useRef","open","current","descriptionElement","focus","children","onClose","handleClose","scroll","fileName","_jsxFileName","lineNumber","columnNumber","dividers","DialogContentText","ref","tabIndex","Array","map","join","minWidth","fullWidth","style","fontSize","fontWeight","doctorName","specialist","variant","color","startTime","index","label","className","onClick","_c","$RefreshReg$"],"sources":["C:/saran/healthCare/healthcare/c/clie/src/components/PatientContainers/Dialog/ApptDialog.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Dialog,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Typography,\r\n    Chip,\r\n} from '@mui/material';\r\nexport default function ApptDialog({ selectedStartTimes, docId,doctorUniqId, id, dialogOpen, handleCloseDialog, selectedDate, doctorsAvailability, setSelectedStartTime, handleBooking }) {\r\nconsole.log(docId);\r\n    const [getDoctors, setGetdoctors] = useState({})\r\n\r\n    useEffect(() => {\r\n        const AllDoctors = doctorsAvailability?.find((e) => e.doctorId === docId)\r\n        setGetdoctors(AllDoctors);\r\n    \r\n      }, []);\r\n\r\n      const descriptionElementRef = React.useRef(null);\r\n      React.useEffect(() => {\r\n        if (open) {\r\n          const { current: descriptionElement } = descriptionElementRef;\r\n          if (descriptionElement !== null) {\r\n            descriptionElement.focus();\r\n          }\r\n        }\r\n      }, [open]);\r\n\r\n  \r\n    return (\r\n        <div>\r\n\r\n\r\n\r\n\r\n\r\n \r\n<Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        scroll={scroll}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"scroll-dialog-title\">Subscribe</DialogTitle>\r\n        <DialogContent dividers={scroll === 'paper'}>\r\n          <DialogContentText\r\n            id=\"scroll-dialog-description\"\r\n            ref={descriptionElementRef}\r\n            tabIndex={-1}\r\n          >\r\n            {[...new Array(50)]\r\n              .map(\r\n                () => `Cras mattis consectetur purus sit amet fermentum.\r\nCras justo odio, dapibus ac facilisis in, egestas eget quam.\r\nMorbi leo risus, porta ac consectetur ac, vestibulum at eros.\r\nPraesent commodo cursus magna, vel scelerisque nisl consectetur et.`,\r\n              )\r\n              .join('\\n')}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n\r\n      </Dialog>\r\n\r\n\r\n            <Dialog open={dialogOpen} onClose={handleCloseDialog} minWidth=\"md\" fullWidth >\r\n                <DialogTitle style={{ fontSize: '15px', fontWeight:\"550\" }}>Dr.{getDoctors.doctorName}</DialogTitle>\r\n        <p>{getDoctors.specialist}</p>\r\n                <DialogContent>\r\n                    <Typography variant=\"body2\" style={{ color: \"grey\" }}>Selected Date: {selectedDate}</Typography>\r\n                    <Typography variant=\"body2\" style={{ color: \"grey\" }}>Available Start Times:</Typography>\r\n                    {selectedStartTimes.map((startTime, index) => (\r\n                        <Chip\r\n                            key={index}\r\n                            label={startTime}\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                            className=\"mt-2\"\r\n                            onClick={() => {\r\n                                setSelectedStartTime(startTime);\r\n                                handleBooking(doctorUniqId, id);\r\n                            }}\r\n                        />\r\n                    ))}\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n// import * as React from 'react';\r\n// import Button from '@mui/material/Button';\r\n// import Dialog from '@mui/material/Dialog';\r\n// import DialogActions from '@mui/material/DialogActions';\r\n// import DialogContent from '@mui/material/DialogContent';\r\n// import DialogContentText from '@mui/material/DialogContentText';\r\n// import DialogTitle from '@mui/material/DialogTitle';\r\n\r\n// export default function ScrollDialog() {\r\n//   const [open, setOpen] = React.useState(false);\r\n//   const [scroll, setScroll] = React.useState('paper');\r\n\r\n//   const handleClickOpen = (scrollType) => () => {\r\n//     setOpen(true);\r\n//     setScroll(scrollType);\r\n//   };\r\n\r\n//   const handleClose = () => {\r\n//     setOpen(false);\r\n//   };\r\n\r\n//   const descriptionElementRef = React.useRef(null);\r\n//   React.useEffect(() => {\r\n//     if (open) {\r\n//       const { current: descriptionElement } = descriptionElementRef;\r\n//       if (descriptionElement !== null) {\r\n//         descriptionElement.focus();\r\n//       }\r\n//     }\r\n//   }, [open]);\r\n\r\n//   return (\r\n//     <div>\r\n//       <Button onClick={handleClickOpen('paper')}>scroll=paper</Button>\r\n\r\n//     </div>\r\n//   );\r\n// }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}