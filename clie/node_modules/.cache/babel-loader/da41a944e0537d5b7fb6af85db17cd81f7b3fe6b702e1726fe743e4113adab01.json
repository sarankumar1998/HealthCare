{"ast":null,"code":"var _jsxFileName = \"C:\\\\saran\\\\healthCare\\\\healthcare\\\\c\\\\clie\\\\src\\\\components\\\\DoctorContainers\\\\Slots.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, Chip, Container, Dialog, DialogContent, DialogTitle, Grid, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Slots({\n  availability\n}) {\n  _s();\n  const [selectedSlot, setSelectedSlot] = useState(null);\n  const [openDialog, setOpenDialog] = useState(false);\n  const handleClickChip = slot => {\n    setSelectedSlot(slot);\n    setOpenDialog(true);\n  };\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: availability.map((item, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            height: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              align: \"left\",\n              children: [\"Date: \", item.dates[0]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: 'grey',\n                fontSize: '13px'\n              },\n              align: \"left\",\n              children: \"Upcoming Appointments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: item.startTimes.map((startTime, timeIndex) => /*#__PURE__*/_jsxDEV(Chip, {\n                label: startTime,\n                variant: \"outlined\",\n                color: \"primary\",\n                className: \"mt-2\",\n                onClick: () => handleClickChip(startTime)\n              }, timeIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: handleCloseDialog,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Selected Slot Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: selectedSlot && /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"You clicked on the slot: \", selectedSlot]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }, this);\n}\n_s(Slots, \"5av5d9LdVkzRodgyY5P0yHOnFFc=\");\n_c = Slots;\nexport default Slots;\nvar _c;\n$RefreshReg$(_c, \"Slots\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardContent","Chip","Container","Dialog","DialogContent","DialogTitle","Grid","Typography","jsxDEV","_jsxDEV","Slots","availability","_s","selectedSlot","setSelectedSlot","openDialog","setOpenDialog","handleClickChip","slot","handleCloseDialog","maxWidth","children","container","spacing","map","item","index","xs","sm","md","style","height","align","dates","fileName","_jsxFileName","lineNumber","columnNumber","color","fontSize","startTimes","startTime","timeIndex","label","variant","className","onClick","open","onClose","_c","$RefreshReg$"],"sources":["C:/saran/healthCare/healthcare/c/clie/src/components/DoctorContainers/Slots.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport { Card, CardContent, Chip, Container, Dialog, DialogContent, DialogTitle, Grid, Typography } from '@mui/material';\r\n\r\nfunction Slots({ availability }) {\r\n    const [selectedSlot, setSelectedSlot] = useState(null);\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n  \r\n    const handleClickChip = (slot) => {\r\n      setSelectedSlot(slot);\r\n      setOpenDialog(true);\r\n    };\r\n  \r\n    const handleCloseDialog = () => {\r\n      setOpenDialog(false);\r\n    };\r\n  \r\n    return (\r\n      <Container maxWidth=\"md\">\r\n        <Grid container spacing={3}>\r\n          {availability.map((item, index) => (\r\n            <Grid key={index} item xs={12} sm={6} md={4}>\r\n              <Card style={{ height: '100%' }}>\r\n                <CardContent>\r\n                  <h6 align=\"left\">Date: {item.dates[0]}</h6>\r\n                  <p style={{ color: 'grey', fontSize: '13px' }} align=\"left\">\r\n                    Upcoming Appointments\r\n                  </p>\r\n                  <div>\r\n                    {item.startTimes.map((startTime, timeIndex) => (\r\n                      <Chip\r\n                        key={timeIndex}\r\n                        label={startTime}\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        className=\"mt-2\"\r\n                        onClick={() => handleClickChip(startTime)}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n        <Dialog open={openDialog} onClose={handleCloseDialog}>\r\n          <DialogTitle>Selected Slot Information</DialogTitle>\r\n          <DialogContent>\r\n            {selectedSlot && (\r\n              <Typography>\r\n                You clicked on the slot: {selectedSlot}\r\n              </Typography>\r\n            )}\r\n          </DialogContent>\r\n        </Dialog>\r\n      </Container>\r\n    );\r\n  }\r\n  \r\n  export default Slots;\r\n  \r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}